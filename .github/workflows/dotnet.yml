name: Build and Release .NET 9 API and Electron UI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set up .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install dependencies
        working-directory: app-ui
        run: npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Check dotnet location and version
        run: |
          which dotnet
          dotnet --info

      - name: Clean .NET tools cache
        run: dotnet nuget locals all --clear

      # --- Run NUnit Tests (before build) ---
      # --- macOS agents are run on Apple Silicon CPUS! ---
      - name: Run Unit Tests (macOS)
        if: runner.os == 'macOS'
        working-directory: app-api
        run: dotnet test --logger "trx;LogFileName=test-results.trx" --arch arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Run Unit Tests (Windows, Linux)
        if: runner.os != 'macOS'
        working-directory: app-api
        run: dotnet test --logger "trx;LogFileName=test-results.trx"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build (Windows)
        if: runner.os == 'Windows'
        working-directory: app-ui
        run: npm run buildwin
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build (macOS x64)
        if: runner.os == 'macOS'
        working-directory: app-ui
        run: npm run buildmac-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build (macOS arm64)
        if: runner.os == 'macOS'
        working-directory: app-ui
        run: npm run buildmac-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build (Linux x64)
        if: runner.os == 'Linux'
        working-directory: app-ui
        run: npm run buildlinux-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build (Linux arm64)
        if: runner.os == 'Linux'
        working-directory: app-ui
        run: npm run buildlinux-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Zip x64 Mac App (macOS)
        if: runner.os == 'macOS'
        run: |          
          cd app-ui/dist/mac && zip -r ElectronStarterApp-mac-x64.zip ElectronStarterApp.app
        shell: bash

      - name: Zip arm64 Mac App (macOS)
        if: runner.os == 'macOS'
        run: |
          cd app-ui/dist/mac-arm64 && zip -r ElectronStarterApp-mac-arm64.zip ElectronStarterApp.app
        shell: bash

      - name: Zip win-unpacked directory (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path app-ui/dist/win-unpacked/* -DestinationPath app-ui/dist/ElectronStarterApp-win-x64.zip
        shell: pwsh

      - name: Rename the x64 AppImage (Linux x64)
        if: runner.os == 'Linux'
        run: |
          cd app-ui/dist && mv ElectronStarterApp-linux-x86_64.AppImage ElectronStarterApp-linux-x64.AppImage
        shell: bash

      - name: Zip linux-unpacked directory (Linux x64)
        if: runner.os == 'Linux'
        run: |
          cd app-ui/dist && zip -r ElectronStarterApp-linux-x64.zip linux-unpacked
        shell: bash

      - name: Zip linux-arm64-unpacked directory (Linux arm64)
        if: runner.os == 'Linux'
        run: |
          cd app-ui/dist && zip -r ElectronStarterApp-linux-arm64.zip linux-arm64-unpacked
        shell: bash

      - name: Upload Installer Artifact (macOS x64)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-mac-x64.dmg
          path: |
            app-ui/dist/ElectronStarterApp-mac-x64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Zip Artifact (macOS x64)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-mac-x64.zip
          path: |
            app-ui/dist/mac/ElectronStarterApp-mac-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Installer Artifact (macOS arm64)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-mac-arm64.dmg
          path: |
            app-ui/dist/ElectronStarterApp-mac-arm64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Zip Artifact (macOS arm64)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-mac-arm64.zip
          path: |
            app-ui/dist/mac-arm64/ElectronStarterApp-mac-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Installer Artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-win-x64.exe
          path: |
            app-ui/dist/ElectronStarterApp-win-x64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Zip Artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-win-x64.zip
          path: |
            app-ui/dist/ElectronStarterApp-win-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload AppImage Artifact (Linux x64)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-linux-x64.AppImage
          path: |
            app-ui/dist/ElectronStarterApp-linux-x64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Zip Artifact (Linux x64)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-linux-x64.zip
          path: |
            app-ui/dist/ElectronStarterApp-linux-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload AppImage Artifact (Linux arm64)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-linux-arm64.AppImage
          path: |
            app-ui/dist/ElectronStarterApp-linux-arm64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Zip Artifact (Linux arm64)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ElectronStarterApp-linux-arm64.zip
          path: |
            app-ui/dist/ElectronStarterApp-linux-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-win-x64.exe
          path: artifacts/windows
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-win-x64.zip
          path: artifacts/windows
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-mac-x64.dmg
          path: artifacts/macos
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-mac-x64.zip
          path: artifacts/macos
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-mac-arm64.dmg
          path: artifacts/macos
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-mac-arm64.zip
          path: artifacts/macos
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-linux-x64.AppImage
          path: artifacts/linux
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-linux-x64.zip
          path: artifacts/linux
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-linux-arm64.AppImage
          path: artifacts/linux
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ElectronStarterApp-linux-arm64.zip
          path: artifacts/linux
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/windows/**
            artifacts/macos/**
            artifacts/linux/**
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
